// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel[0] = address[6], sel[1] = address[7], sel[2] = address[8], a = r1, b = r2, c = r3, d = r4, e = r5, f = r6, g = r7, h = r8);
    RAM64(in = in, load = r1, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o1);
    RAM64(in = in, load = r2, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o2);
    RAM64(in = in, load = r3, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o3);
    RAM64(in = in, load = r4, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o4);
    RAM64(in = in, load = r5, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o5);
    RAM64(in = in, load = r6, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o6);
    RAM64(in = in, load = r7, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o7);
    RAM64(in = in, load = r8, address[0] = address[0], address[1] = address[1], address[2] = address[2], address[3] = address[3], address[4] = address[4], address[5] = address[5], out = o8);
    Mux8Way16(a = o1, b = o2, c = o3, d = o4, e = o5, f = o6, g = o7, h = o8, sel[0] = address[6], sel[1] = address[7], sel[2] = address[8], out = out);
}   